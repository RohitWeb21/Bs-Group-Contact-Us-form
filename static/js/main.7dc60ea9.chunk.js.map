{"version":3,"sources":["images/bs_group_logo2.png","components/FormValidation.js","components/Form.jsx","components/ContactForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["FormValidation","useState","firstName","lastName","contactNumber","email","userValues","setUserValues","errors","allRecord","setAllRecord","handleInput","e","target","name","value","handleSubmit","preventDefault","newRecord","id","Date","getTime","toString","console","log","trim","length","test","Form","action","onSubmit","className","autoComplete","type","placeholder","onChange","ContactForm","Fragment","src","logo","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dc60ea9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bs_group_logo2.c99b91ce.png\";","import React, { useState } from \"react\";\r\nconst FormValidation = () => {\r\n  const [userValues, setUserValues] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    contactNumber: \"\",\r\n    email: \"\",\r\n  });\r\n  const [errors, setError] = useState({});\r\n\r\n  const [allRecord, setAllRecord] = useState([]);\r\n  //   const { firstName, lastName, contactNumber, Email } = userContactData;\r\n\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setUserValues({\r\n      ...userValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newRecord = {\r\n      ...userValues,\r\n      id: new Date().getTime().toString(),\r\n    };\r\n   \r\n    setAllRecord({ ...allRecord, newRecord });\r\n    console.log(allRecord);\r\n    //   validation start\r\n\r\n    // first name validation\r\n    if (!userValues.firstName.trim()) {\r\n      errors.firstName = \"First name is required\";\r\n     \r\n    } else if (userValues.firstName.length < 3) {\r\n      errors.firstName = \"Enter a valid first name \";\r\n    } else {\r\n      errors.firstName = \"\";\r\n    }\r\n\r\n\r\n    // last name validation\r\n    if (!userValues.lastName.trim()) {\r\n      errors.lastName = \"First name is required \";\r\n    } else if (userValues.lastName.length <= 5) {\r\n      errors.lastName = \"Enter a valid last name \";\r\n    } else {\r\n      errors.lastName = \"\";\r\n    }\r\n // contact number validation\r\n    if (userValues.contactNumber==\"\") {\r\n      errors.contactNumber = \"Contact Number Is Required \";\r\n    } else if (userValues.contactNumber.length < 10) {\r\n      errors.contactNumber = \"Contact number must have 10 digits\";\r\n    }else if (userValues.contactNumber.length >12) {\r\n      errors.contactNumber = \"Enter valid contact number\";\r\n    }else {\r\n      errors.contactNumber = \"\";\r\n    }\r\n    // email validation\r\n   \r\n  if (userValues.email==\"\") {\r\n      errors.email = \"Email is required\";\r\n   }\r\n   else if(!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userValues.email)){\r\n      errors.email = \"Email Address Is Invalid\";\r\n    }\r\n    else {\r\n      errors.email = \"\";\r\n    }\r\n\r\n  \r\n console.log(errors.email);\r\n  };\r\n\r\n    \r\n \r\n\r\n  return { handleInput, userValues,errors, handleSubmit };\r\n};\r\nexport default FormValidation;\r\n","import React, { useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport FormValidation from \"./FormValidation\";\r\nconst Form = () => {\r\n  const { handleInput, userValues, errors, handleSubmit } = FormValidation();\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        action=\"\"\r\n        onSubmit={handleSubmit}\r\n        className=\"contact_form_inner_bg  \"\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\" container col-12 d-flex flex-wrap align-content-center justify-content-center  \">\r\n          <div className=\"First_last_name col-12 d-flex flex-wrap\">\r\n            <div className=\"col-md-6 col-12 text-center \">\r\n              <input\r\n                className=\"form_input_fill_name\"\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                autoComplete=\"off\"\r\n                value={userValues.firstName}\r\n                placeholder=\" First Name\"\r\n                onChange={handleInput}\r\n                autoComplete=\"false\"\r\n             \r\n              />\r\n              {/* error massege */}\r\n              {errors.firstName && (\r\n                <label name=\"firstName\" className=\"error-massage\">\r\n                  {errors.firstName && <span className=\"color-red\"> * </span>}\r\n                  {errors.firstName}\r\n                </label>\r\n              )}\r\n            </div>\r\n\r\n            {/* last name section  */}\r\n\r\n            <div className=\"col-md-6 col-12 text-center \">\r\n              <input\r\n                className=\"form_input_fill_name\"\r\n                type=\"text\"\r\n                value={userValues.lastName}\r\n                name=\"lastName\"\r\n                placeholder=\" Last Name\"\r\n                onChange={handleInput}\r\n                autoComplete=\"false\"\r\n              />\r\n              {/* error massege */}\r\n              {errors.lastName && (\r\n                <label name=\"lastName\" className=\"error-massage\">\r\n                  {errors.lastName && <span className=\"color-red\"> * </span>}\r\n                  {errors.lastName}\r\n                </label>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* contact Number section  */}\r\n\r\n          <div className=\"Contact_Email_section\">\r\n            <div className=\"col-12\">\r\n              <input\r\n                className=\"form_input_fill\"\r\n                type=\"Number\"\r\n                value={userValues.contactNumber}\r\n                name=\"contactNumber\"\r\n                placeholder=\" Contact No\"\r\n                onChange={handleInput}\r\n                autoComplete=\"false\"\r\n                \r\n              />\r\n              {/* error massege */}\r\n              <div className=\"error-massage\">\r\n                {errors.contactNumber && (\r\n                  <label name=\"contactNumber\" className=\"error-massage-2\">\r\n                    {errors.contactNumber && (\r\n                      <span className=\"color-red\"> * </span>\r\n                    )}\r\n                    {errors.contactNumber}\r\n                  </label>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* email section  */}\r\n\r\n            <div className=\"col-12\">\r\n              <input\r\n                className=\"form_input_fill\"\r\n                type=\"text\"\r\n                value={userValues.email}\r\n                name=\"email\"\r\n                placeholder=\" Email\"\r\n                onChange={handleInput}\r\n                autoComplete=\"false\"\r\n              />\r\n              {/* error massege */}\r\n              <div className=\"error-massage\">\r\n                {errors.email && (\r\n                  <label name=\"email\" className=\"error-massage-2\">\r\n                    {errors.email && <span className=\"color-red\"> * </span>}\r\n                    {errors.email}\r\n                  </label>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* button section  */}\r\n\r\n          <div className=\"button_div col-12 d-flex flex-wrap align-item-center justify-content-center\">\r\n            <button type=\"submit\" className=\"button effect\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default Form;\r\n","import React from \"react\";\r\nimport logo from \"../images/bs_group_logo2.png\";\r\n// import ContactBg from \"../images/ContactBg.jpg\";\r\nimport Form from \"./Form\";\r\nimport \"./Contact.css\";\r\nconst ContactForm = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"contact_form_main_section d-flex flex-wrap\">\r\n        <div className=\"contact_heading_div col-12\">\r\n        \r\n          <h2 className=\"contact_heading text-center\">\r\n            <span className=\"contact_us_Font_size\"> Contact Us</span>{\" \"}\r\n          </h2>\r\n          <div className=\"col-12 \">\r\n        \r\n              <img src={logo} alt=\"\" className=\"bs_logo_bg\" />\r\n              <span className=\"bs_logo_text\">\r\n                <span className=\"text-white\"> Bs </span>\r\n                <span className=\"text-blue\">Group</span>\r\n              </span>\r\n           \r\n          </div>\r\n        </div>\r\n        {/* form section  */}\r\n        <div className=\"contact_form_main_div\">\r\n          <Form />\r\n        </div>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default ContactForm;\r\n","import React from \"react\";\nimport ContactForm from \"./components/ContactForm\"\nconst App = () => {\n  return (\n    <React.Fragment>\n      <ContactForm/>\n    </React.Fragment>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}